<?phpclass s_extend{    //批量(数组)定义常量    static function arr_define($data,$is_lower=true){        foreach ($data as $key=>$value) {            $key=$is_lower ? strtolower('dc_'.$key) : strtoupper('dc_'.$key);            $type_arr=array('string','integer','double','boolean');            if (!in_array(gettype($value),$type_arr)) {                $value=(string)$value;            }            if (!defined($key)) {                define($key,$value);            }        }    }    //加载分组模型    static function load($g_name,$c_name,$dir_mode=false){        $g_name=$dir_mode ? trim($g_name,'/.... ').'/' : (trim($g_name) ? $g_name.'/model/' : 'model/');        $file=dc_root.$g_name.$c_name.'.php';        if (file_exists($file) && is_file($file)) {            require_once $file;            return class_exists($c_name) ? $c_name : false;        }    }    //多选数据读取处理    static function arr_act($target_arr,$compare_arr,$res_char='、'){        $res_arr=null;        if ($target_arr) {            foreach ($target_arr as $ta) {                if (isset($compare_arr[$ta])) $res_arr[]=$compare_arr[$ta];            }        }        return $res_arr ? implode($res_char,$res_arr) : null;    }    //返回单个汉字的拼音    static function spell($str){        $len=strlen(trim($str));        if ($len < 2) return $str;        $fp=fopen(dc_data_static.'txt/spell.txt',"r");        $spell_arr=null;        while (!feof($fp)) {            $line=trim(fgets($fp));            $arr=explode("=",$line);            $spell_arr[$arr[0]]=$arr[1];        }        fclose($fp);        return $spell_arr[$str];    }    //获取二维码（net-google）    static function get_qrcode($str,$w_h='120',$level='L',$margin='0'){        $str=trim($str);        $str=safe::reg($str,'url') ? urlencode($str) : $str;        $gg_url='http://chart.apis.google.com/chart?';        $url_param='chs='.$w_h.'x'.$w_h.'&cht=qr&chld='.$level.'|'.$margin.'&chl='.$str;        // return $gg_url.$url_param;        return '<img src='.$gg_url.$url_param.'>';    }    //获取用户主机信息    static function agent(){        if (isset($_SERVER['HTTP_USER_AGENT'])) return $_SERVER['HTTP_USER_AGENT'];    }    //获取IP    static function get_ip($v_ip='unknown'){        if (isset($_SERVER)) {            if (isset($_SERVER["HTTP_X_FORWARDED_FOR"])) {                $v_ip=$_SERVER["HTTP_X_FORWARDED_FOR"];            } elseif (isset($_SERVER["HTTP_CLIENT_IP"])) {                $v_ip=$_SERVER["HTTP_CLIENT_IP"];            } else {                $v_ip=$_SERVER["REMOTE_ADDR"];            }        } else {            if (getenv("HTTP_X_FORWARDED_FOR")) {                $v_ip=getenv("HTTP_X_FORWARDED_FOR");            } elseif (getenv("HTTP_CLIENT_IP")) {                $v_ip=getenv("HTTP_CLIENT_IP");            } else {                $v_ip=getenv("REMOTE_ADDR");            }        }        return $v_ip;    }    //获取请求ip所在的省份和城市    static function get_place($ip=null,$url=null){        $ip=isset($ip) ? $ip : self::get_ip();        // http://ipquery.sdo.com/getipinfo.php?ip=        $url=$url ? $url : 'http://int.dpool.sina.com.cn/iplookup/iplookup.php?ip=';        $str=@iconv("gbk","utf-8//IGNORE",file_get_contents($url.$ip));        preg_match_all("/[\x{4e00}-\x{9fa5}]+/u",$str,$place);        return $place[0];    }    //获取指定长度的随即字符串    static function code($len=4,$is_lower_case=1){        $str="abcdefghijkmnpqrstuvwxyzABCDEFGHIJKMNPQRSTUVWXYZ23456789";        $code="";        for ($i=0; $i < $len; $i++) {            $code.=$str[rand(0,55)];        }        if ($is_lower_case == 1) return strtolower($code);        return ($is_lower_case == 3) ? strtoupper($code) : $code;    }    //获取指定3个长度的[汉字]    static function out_word($info,$lenth=3){        if ($info == 'bjx') {            $word_arr=str_split(config('word|bjx','word'),3);            $word=null;            for ($i=0; $i < 3; $i++) {                $word.=$word_arr[rand(0,count($word_arr))];            }            return $word;        }        $word_arr=explode(',',config('word|'.$info,'word'));        return $word_arr[rand(0,count($word_arr))];    }    //获取字符串中的首个img标签的src属性值(图片路径)    static function get_img_src($str_info){        $src_exp='/<img[^\/>src]+src="([^"]+)"[^\/>]*\/?>/'; //匹配src表达式        preg_match($src_exp,$str_info,$arr);        if (isset($arr[1])) return $arr[1];    }}